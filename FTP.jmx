<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="FTP Test Plan" enabled="true">
      <stringProp name="TestPlan.comments">FTP Test Plan to illustrate JSR223 Sampler with external Grrovy Scripts</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="FTP Request Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1394694936000</longProp>
        <longProp name="ThreadGroup.end_time">1394694936000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">A Sample FTP Request Thread Group</stringProp>
      </ThreadGroup>
      <hashTree>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="Flat File Path Processor" enabled="true">
          <stringProp name="cacheKey"></stringProp>
          <stringProp name="filename">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}${__BeanShell(File.separator,)}FlatFilePathProcessor.groovy</stringProp>
          <stringProp name="parameters">FlatFiles</stringProp>
          <stringProp name="script"></stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="TestPlan.comments">This Sampler will process the List of Flat Files available under a Sub Directory and will Put each file name into a Jmeter Variable</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller" enabled="true">
          <stringProp name="ForeachController.inputVal">FlatFiles</stringProp>
          <stringProp name="ForeachController.returnVal">FlatFiles</stringProp>
          <boolProp name="ForeachController.useSeparator">true</boolProp>
          <stringProp name="TestPlan.comments">This will Send the FTP Request for each Flat file inside a sub directory</stringProp>
        </ForeachController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Flat File Name Processor" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}${__BeanShell(File.separator,)}ExtractFileName.groovy</stringProp>
            <stringProp name="cacheKey"></stringProp>
            <stringProp name="script"></stringProp>
            <stringProp name="TestPlan.comments">This step will extract the Name from the File Path and will put it into a seperate Jmeter Variable</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <FTPSampler guiclass="FtpTestSamplerGui" testclass="FTPSampler" testname="A Sample FTP Request to Upload a File" enabled="true">
            <stringProp name="TestPlan.comments">A Sample FTP Request to Upload a File</stringProp>
            <stringProp name="FTPSampler.server">test.talia.net</stringProp>
            <stringProp name="FTPSampler.port"></stringProp>
            <stringProp name="FTPSampler.filename">incoming/${FileName}</stringProp>
            <stringProp name="FTPSampler.localfilename">${FlatFiles}</stringProp>
            <stringProp name="FTPSampler.inputdata"></stringProp>
            <boolProp name="FTPSampler.binarymode">false</boolProp>
            <boolProp name="FTPSampler.saveresponse">false</boolProp>
            <boolProp name="FTPSampler.upload">true</boolProp>
            <stringProp name="ConfigTestElement.username">anonymous</stringProp>
            <stringProp name="ConfigTestElement.password">anonymous@anonymous.com</stringProp>
          </FTPSampler>
          <hashTree>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="49586">200</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">8</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>false</message>
              <threadName>true</threadName>
              <dataType>false</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
              <sampleCount>true</sampleCount>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
